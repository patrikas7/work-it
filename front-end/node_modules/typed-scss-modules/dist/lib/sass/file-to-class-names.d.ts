import { Implementations } from "../implementations";
import { Aliases, SASSImporterOptions } from "./importer";
export { Aliases };
export declare type ClassName = string;
declare const transformersMap: {
    readonly camel: (className: ClassName) => string;
    readonly dashes: (className: ClassName) => string;
    readonly kebab: (className: ClassName) => string;
    readonly none: (className: ClassName) => string;
    readonly param: (className: ClassName) => string;
    readonly snake: (className: ClassName) => string;
};
declare type NameFormatsWithTransformer = keyof typeof transformersMap;
export declare const NAME_FORMATS: string[];
export interface SASSOptions extends SASSImporterOptions {
    additionalData?: string;
    includePaths?: string[];
    nameFormat?: (string | number)[];
    implementation: Implementations;
}
export declare const nameFormatDefault: NameFormatsWithTransformer;
export declare const fileToClassNames: (file: string, { additionalData, includePaths, nameFormat, implementation, aliases, aliasPrefixes, importer, }?: SASSOptions) => Promise<string[]>;
